# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
#
# [57.8, 46.51, 97, ...]
# * Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде
# <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки,
#  как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00
# коп).
#
# * Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект
# списка после сортировки остался тот же).
# * Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# * Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию,
#  написав минимум кода?

# import random
commodity_prices = [62.86, 83.96, 15.26, 81.94, 0.93, 35.87, 90.04, 78.1, 17.81, 13, 69.93, 42.59, 41.76,
                    86.24, 52.04, 68, 0.48, 21.93, 39.23, 46.79, 57.00, 0.03]  # создаем пустой список
# for i in range(20):
#     commodity_prices.append(round(random.uniform(0, 100), 2))  # заполняем список произвольными цифрами от ноля до ста
#     #  округляем до сотых
# print(commodity_prices)

# * Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде
# <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки,
#  как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00
# коп).

# mod_commodity_prices = ''
# for i in commodity_prices:
#
#     if type(i) == int:
#          k = (f'<<{i} руб 00 коп>> ')
#          mod_commodity_prices += k
#
#
#     else:
#
#         rub = int(i // 1)
#         kop = str(int((round(i % 1, 2)) * 100))
#         k =(f'<<{rub} руб {kop.zfill(2)} коп>>, ')
#         mod_commodity_prices += k
#
# print(mod_commodity_prices)

# * Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект
# списка после сортировки остался тот же).

# print(id(commodity_prices))
# print(commodity_prices)
# print(sorted(commodity_prices))  # при использовании sorted() список не меняется
# print(id(commodity_prices))
# print(commodity_prices)


# print(id(commodity_prices))
# print(commodity_prices)
# commodity_prices.sort()  # при использовании sort() список изменился
# print(commodity_prices)
# print(id(commodity_prices))


# * Создать новый список, содержащий те же цены, но отсортированные по убыванию.

print(commodity_prices)
commodity_prices.sort(reverse=True)
print(commodity_prices)

# * Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию,
#  написав минимум кода?

print(commodity_prices[:5]) # выводим срез списка отсортированного по убыванию